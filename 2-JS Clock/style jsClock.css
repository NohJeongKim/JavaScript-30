@import "reset.css";

html {
  background: no-repeat url("ocean.jpg");
  background-size: cover;
}

body {
  display: flex;
  flex-direction: row;
  justify-content: center;
  height: 100vh;
  align-items: center;
}

.clock {
  /* clock에서 시계 모양을 만들어준다. */
  width: 400px;
  height: 400px;
  border: 20px solid white;
  border-radius: 50%;
  position: relative; /* 계속 위치가 그 문서의 흐름에 따라서 가기 때문에 relative로 지정하기. */
  box-shadow: 0 0 0 4px rgba(0, 0, 0, 0.1), inset 0 0 0 3px #efefef,
    inset 0 0 10px black, 0 0 10px rgba(0, 0, 0, 0.2);
}

/*  0 0 4px rgba(0, 0, 0, 0.1), inset 0 0 0 3px #efefef,
    inset 0 0 10px black, 0 0 10px rgba(0, 0, 0, 0.2); 그럴 듯하게 시계에 입체감을 줄 수 있다. */

.clock-face {
  /* 시침, 분침, 초침을 이 영역에서 움직일 수 있도록 조정시켜준다. */
  width: 100%;
  height: 100%;
  position: relative; /* 계속 위치가 그 문서의 흐름에 따라서 가기 때문에 relative로 지정하기. */
  transform: translateY(-3px); /* account for the height of the clock hands */
  /* 이 부분은 왜 있는지 잘 모르겠다. */
}

.hand {
  width: 50%;
  height: 6px;
  background: rgb(252, 117, 252);
  position: absolute; /* 기존의 문서 흐름대로 가지 않기 때문이다. 계속 시침, 분침, 초침은 움직여야 하기 때문이다. */
  top: 50%;
  transform-origin: 100%;
  transform: rotate(90deg);
  /* 시간이 흐름에 따라서 효과를 주고 싶은 경우에 transition 이용하기. */
  /* 시계가 틱톡틱톡 움직이는 효과를 줄 수 있다. - cubic-bezier 이용함으로서 */
  transition: all 0.05s;
  transition-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);
}

.second-hand {
  background-color: yellowgreen;
}

.min-hand {
  background-color: rgb(64, 64, 255);
}
